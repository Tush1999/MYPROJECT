{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Desktop/My Project/Company-project/src/Employees.js\";\nimport React, { Component } from \"react\";\nimport ShowData from \"./ShowData\";\nimport SideBar from \"./SideBar\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport Airtable from \"airtable\";\nimport \"./style.css\";\nconst base = new Airtable({\n  apiKey: \"keyHHrGcNLiewGh05\"\n}).base(\"appnnQqeeXZmvVJvB\");\nexport default class Employees extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = e => {\n      this.setState({\n        searchField: e.target.value\n      });\n    };\n\n    this.state = {\n      searchField: \"\",\n      employees: []\n    };\n  }\n\n  componentDidMount() {\n    base(\"Imported table\").select({\n      view: \"Grid view\",\n      fields: [\"Date\", \"Participant Name\", \"Participant Identifier\"]\n    }).eachPage((records, fetchNextPage) => {\n      let array = records.map(record => ({\n        pName: record.fields[\"Participant Name\"],\n        pId: record.fields[\"Participant Identifier\"]\n      }));\n      const result = [];\n      const map = new Map();\n\n      for (const item of array) {\n        if (!map.has(item.pName)) {\n          map.set(item.pName, true);\n          result.push({\n            pName: item.pName,\n            pId: item.pId\n          });\n        }\n      }\n\n      this.setState({\n        employees: result\n      });\n      fetchNextPage();\n    });\n  }\n\n  render() {\n    var filteredData = this.state.employees.filter(val => val.pName.toLowerCase().includes(this.state.searchField.toLowerCase())).sort((a, b) => a.pName.localeCompare(b.pName));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rightbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"30%\"\n      },\n      className: \"form-control\",\n      type: \"search\",\n      value: this.state.searchField,\n      onChange: this.handleSearch,\n      placeholder: \"search here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ShowData, {\n      data: filteredData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/tushar/Desktop/My Project/Company-project/src/Employees.js"],"names":["React","Component","ShowData","SideBar","Route","NavLink","Airtable","base","apiKey","Employees","constructor","props","handleSearch","e","setState","searchField","target","value","state","employees","componentDidMount","select","view","fields","eachPage","records","fetchNextPage","array","map","record","pName","pId","result","Map","item","has","set","push","render","filteredData","filter","val","toLowerCase","includes","sort","a","b","localeCompare","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ShowData from \"./ShowData\";\nimport SideBar from \"./SideBar\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport Airtable from \"airtable\";\nimport \"./style.css\";\n\nconst base = new Airtable({ apiKey: \"keyHHrGcNLiewGh05\" }).base(\n  \"appnnQqeeXZmvVJvB\"\n);\n\nexport default class Employees extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { searchField: \"\", employees: [] };\n  }\n  componentDidMount() {\n    base(\"Imported table\")\n      .select({\n        view: \"Grid view\",\n        fields: [\"Date\", \"Participant Name\", \"Participant Identifier\"],\n      })\n      .eachPage((records, fetchNextPage) => {\n        let array = records.map((record) => ({\n          pName: record.fields[\"Participant Name\"],\n          pId: record.fields[\"Participant Identifier\"],\n        }));\n        const result = [];\n        const map = new Map();\n        for (const item of array) {\n          if (!map.has(item.pName)) {\n            map.set(item.pName, true);\n            result.push({\n              pName: item.pName,\n              pId: item.pId,\n            });\n          }\n        }\n        this.setState({ employees: result });\n        fetchNextPage();\n      });\n  }\n  handleSearch = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    var filteredData = this.state.employees\n      .filter((val) =>\n        val.pName.toLowerCase().includes(this.state.searchField.toLowerCase())\n      )\n      .sort((a, b) => a.pName.localeCompare(b.pName));\n    return (\n      <div className=\"rightbar\">\n        <div>\n          <input\n            style={{ width: \"30%\" }}\n            className=\"form-control\"\n            type=\"search\"\n            value={this.state.searchField}\n            onChange={this.handleSearch}\n            placeholder=\"search here\"\n          />\n          <div>\n            <ShowData data={filteredData} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}