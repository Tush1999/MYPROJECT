{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Desktop/My Project/Company-project/src/Details.js\";\nimport React, { Component } from \"react\";\nimport Airtable from \"airtable\";\nconst base = new Airtable({\n  apiKey: \"keyHHrGcNLiewGh05\"\n}).base(\"appnnQqeeXZmvVJvB\");\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showData = data => {\n      this.count = 1;\n      return this.count;\n    };\n\n    this.a = () => {\n      let data = this.state.employee[0];\n      if (data) this.showData(data.fields);else {\n        console.log(\"test failed\");\n        this.count = 0;\n      }\n    };\n\n    this.state = {\n      employee: []\n    };\n  }\n\n  componentDidMount() {\n    let name = this.props.name.match.params.name;\n    let meeting = this.props.name.match.params.meeting;\n    let a = `'${meeting}'`;\n    base(\"Imported table\").select({\n      view: \"Grid view\",\n      filterByFormula: \"AND({Participant Name}=\" + `'${name}'` + \",{Meeting Code}=\" + `'${meeting}'` + \")\"\n    }).eachPage((records, fetchNextPage) => {\n      this.setState({\n        employee: records\n      });\n      fetchNextPage();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"Hello guys\", this.count ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"hello guys I ma back\"), \"Audio Receive Duration: \", data[\"Audio Receive Duration\"], \"Audio Receive Packet Loss Max: \", data[\"Audio Receive Packet Loss Max\"], \"Audio Receive Packet Loss Mean: \", data[\"Audio Receive Packet Loss Mean\"], \"Audio Send Bitrate Mean in kbps:\", \" \", data[\"Audio Send Bitrate Mean in kbps\"], \"Audio Send Duration: \", data[\"Audio Send Duration\"], \"Audio Send Packet Loss Max: \", data[\"Audio Send Packet Loss Max\"], \"Audio Send Packet Loss Mean: \", data[\"Audio Send Packet Loss Mean\"], \"Calendar Event Id: \", data[\"Calendar Event Id\"], \"City: \", data[\"City\"], \"Client Type: \", data[\"Client Type\"], \"Conference ID: \", data[\"Conference ID\"], \"Country: \", data.Country, \"Date: \", data.Date, \"Duration: \", data.Duration, \"Event Description:\", data[\"Event Description\"], \"Event Name: \", data[\"Event Name\"], \"IP Address: \", data[\"IP Address\"], \"Meeting Code: \", data[\"Meeting Code\"], \"Organizer Email: \", data[\"Organizer Email\"], \"Participant Identifier: \", data[\"Participant Identifier\"]) : null);\n  }\n\n}","map":{"version":3,"sources":["/home/tushar/Desktop/My Project/Company-project/src/Details.js"],"names":["React","Component","Airtable","base","apiKey","Conferences","constructor","props","showData","data","count","a","state","employee","fields","console","log","componentDidMount","name","match","params","meeting","select","view","filterByFormula","eachPage","records","fetchNextPage","setState","render","Country","Date","Duration"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,IAAI,GAAG,IAAID,QAAJ,CAAa;AAAEE,EAAAA,MAAM,EAAE;AAAV,CAAb,EAA8CD,IAA9C,CACX,mBADW,CAAb;AAIA,eAAe,MAAME,WAAN,SAA0BJ,SAA1B,CAAoC;AACjDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,QAvBmB,GAuBPC,IAAD,IAAU;AAClB,WAAKC,KAAL,GAAW,CAAX;AACA,aAAO,KAAKA,KAAZ;AACF,KA1BkB;;AAAA,SA2BnBC,CA3BmB,GA2BjB,MAAI;AACF,UAAIF,IAAI,GAAC,KAAKG,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAAT;AACA,UAAGJ,IAAH,EACA,KAAKD,QAAL,CAAcC,IAAI,CAACK,MAAnB,EADA,KAGA;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,aAAKN,KAAL,GAAW,CAAX;AAAa;AAChB,KAlCkB;;AAEjB,SAAKE,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AACDI,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,IAAI,GAAG,KAAKX,KAAL,CAAWW,IAAX,CAAgBC,KAAhB,CAAsBC,MAAtB,CAA6BF,IAAxC;AACA,QAAIG,OAAO,GAAG,KAAKd,KAAL,CAAWW,IAAX,CAAgBC,KAAhB,CAAsBC,MAAtB,CAA6BC,OAA3C;AACA,QAAIV,CAAC,GAAI,IAAGU,OAAQ,GAApB;AACAlB,IAAAA,IAAI,CAAC,gBAAD,CAAJ,CACGmB,MADH,CACU;AACNC,MAAAA,IAAI,EAAE,WADA;AAENC,MAAAA,eAAe,EACb,4BACC,IAAGN,IAAK,GADT,GAEA,kBAFA,GAGC,IAAGG,OAAQ,GAHZ,GAIA;AAPI,KADV,EAUGI,QAVH,CAUY,CAACC,OAAD,EAAUC,aAAV,KAA4B;AACpC,WAAKC,QAAL,CAAc;AAAEf,QAAAA,QAAQ,EAAEa;AAAZ,OAAd;AACAC,MAAAA,aAAa;AACd,KAbH;AAcD;;AAaDE,EAAAA,MAAM,GAAG;AAEP,wBAAO,wDAEN,KAAKnB,KAAL,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,8BAE8BD,IAAI,CAAC,wBAAD,CAFlC,qCAGoCA,IAAI,CAAC,+BAAD,CAHxC,sCAIqCA,IAAI,CAAC,gCAAD,CAJzC,sCAKqC,GALrC,EAMKA,IAAI,CAAC,iCAAD,CANT,2BAO0BA,IAAI,CAAC,qBAAD,CAP9B,kCAQiCA,IAAI,CAAC,4BAAD,CARrC,mCASkCA,IAAI,CAAC,6BAAD,CATtC,yBAUwBA,IAAI,CAAC,mBAAD,CAV5B,YAWWA,IAAI,CAAC,MAAD,CAXf,mBAYkBA,IAAI,CAAC,aAAD,CAZtB,qBAaoBA,IAAI,CAAC,eAAD,CAbxB,eAccA,IAAI,CAACqB,OAdnB,YAeWrB,IAAI,CAACsB,IAfhB,gBAgBetB,IAAI,CAACuB,QAhBpB,wBAiBuBvB,IAAI,CAAC,mBAAD,CAjB3B,kBAkBiBA,IAAI,CAAC,YAAD,CAlBrB,kBAmBiBA,IAAI,CAAC,YAAD,CAnBrB,oBAoBmBA,IAAI,CAAC,cAAD,CApBvB,uBAqBsBA,IAAI,CAAC,iBAAD,CArB1B,8BAsB6BA,IAAI,CAAC,wBAAD,CAtBjC,CADC,GAwBS,IA1BH,CAAP;AA4BD;;AAlEgD","sourcesContent":["import React, { Component } from \"react\";\nimport Airtable from \"airtable\";\n\nconst base = new Airtable({ apiKey: \"keyHHrGcNLiewGh05\" }).base(\n  \"appnnQqeeXZmvVJvB\"\n);\n\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { employee: [] };\n  }\n  componentDidMount() {\n    let name = this.props.name.match.params.name;\n    let meeting = this.props.name.match.params.meeting;\n    let a = `'${meeting}'`;\n    base(\"Imported table\")\n      .select({\n        view: \"Grid view\",\n        filterByFormula:\n          \"AND({Participant Name}=\" +\n          `'${name}'` +\n          \",{Meeting Code}=\" +\n          `'${meeting}'` +\n          \")\",\n      })\n      .eachPage((records, fetchNextPage) => {\n        this.setState({ employee: records });\n        fetchNextPage();\n      });\n  }\n  showData = (data) => {\n     this.count=1;\n     return this.count;\n  };\n  a=()=>{\n      let data=this.state.employee[0]\n      if(data)\n      this.showData(data.fields)\n      else\n      {console.log(\"test failed\")\n      this.count=0}\n  }\n  render() {\n   \n    return <>\n    Hello guys\n    {this.count?(\n    <div>\n        <h1>hello guys I ma back</h1>\n         Audio Receive Duration: {data[\"Audio Receive Duration\"]}\n        Audio Receive Packet Loss Max: {data[\"Audio Receive Packet Loss Max\"]}\n        Audio Receive Packet Loss Mean: {data[\"Audio Receive Packet Loss Mean\"]}\n        Audio Send Bitrate Mean in kbps:{\" \"}\n        {data[\"Audio Send Bitrate Mean in kbps\"]}\n        Audio Send Duration: {data[\"Audio Send Duration\"]}\n        Audio Send Packet Loss Max: {data[\"Audio Send Packet Loss Max\"]}\n        Audio Send Packet Loss Mean: {data[\"Audio Send Packet Loss Mean\"]}\n        Calendar Event Id: {data[\"Calendar Event Id\"]}\n        City: {data[\"City\"]}\n        Client Type: {data[\"Client Type\"]}\n        Conference ID: {data[\"Conference ID\"]}\n        Country: {data.Country}\n        Date: {data.Date}\n        Duration: {data.Duration}\n        Event Description:{data[\"Event Description\"]}\n        Event Name: {data[\"Event Name\"]}\n        IP Address: {data[\"IP Address\"]}\n        Meeting Code: {data[\"Meeting Code\"]}\n        Organizer Email: {data[\"Organizer Email\"]}\n        Participant Identifier: {data[\"Participant Identifier\"]}\n      </div>):null}\n    </>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}