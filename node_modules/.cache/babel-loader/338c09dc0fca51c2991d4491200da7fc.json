{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Desktop/My Project/Company-project/src/Conferences.js\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Airtable from \"airtable\";\nimport './style.css';\nconst base = new Airtable({\n  apiKey: \"keyHHrGcNLiewGh05\"\n}).base(\"appnnQqeeXZmvVJvB\");\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conference: []\n    };\n  }\n\n  componentDidMount() {\n    // let a = \"Tushar Bansal\";\n    //let name = `'${a}'`;\n    base(\"Imported table\").select({\n      view: \"Grid view\",\n      //filterByFormula: \"SEARCH(\" + name + \",{Participant Name})\",\n      fields: [\"Conference ID\", \"Participant Name\"]\n    }).eachPage((records, fetchNextPage) => {\n      let arr = records.map(record => record.fields[\"Conference ID\"]);\n      let a = [...new Set(arr)];\n      this.setState({\n        conference: a\n      });\n      fetchNextPage();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, this.state.conference.map(value => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `/Conference/${value}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, \"Conference ID- \", value)))));\n  }\n\n}","map":{"version":3,"sources":["/home/tushar/Desktop/My Project/Company-project/src/Conferences.js"],"names":["React","Component","NavLink","Airtable","base","apiKey","Conferences","constructor","props","state","conference","componentDidMount","select","view","fields","eachPage","records","fetchNextPage","arr","map","record","a","Set","setState","render","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,aAAP;AAEA,MAAMC,IAAI,GAAG,IAAID,QAAJ,CAAa;AAAEE,EAAAA,MAAM,EAAE;AAAV,CAAb,EAA8CD,IAA9C,CACX,mBADW,CAAb;AAIA,eAAe,MAAME,WAAN,SAA0BL,SAA1B,CAAmC;AAC9CM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAX;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACAP,IAAAA,IAAI,CAAC,gBAAD,CAAJ,CACGQ,MADH,CACU;AACNC,MAAAA,IAAI,EAAE,WADA;AAEN;AACAC,MAAAA,MAAM,EAAC,CAAC,eAAD,EAAiB,kBAAjB;AAHD,KADV,EAMGC,QANH,CAMY,CAACC,OAAD,EAAUC,aAAV,KAA4B;AACnC,UAAIC,GAAG,GAAGF,OAAO,CAACG,GAAR,CAAaC,MAAD,IAAYA,MAAM,CAACN,MAAP,CAAc,eAAd,CAAxB,CAAV;AACA,UAAIO,CAAC,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQJ,GAAR,CAAJ,CAAR;AACD,WAAKK,QAAL,CAAc;AAAEb,QAAAA,UAAU,EAAEW;AAAd,OAAd;AACAJ,MAAAA,aAAa;AACd,KAXH;AAYD;;AACPO,EAAAA,MAAM,GAAE;AAGJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKf,KAAL,CAAWC,UAAX,CAAsBS,GAAtB,CAA2BM,KAAD,iBACvB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACF,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAG,eAAcA,KAAM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACiBA,KADjB,CADE,CADJ,CADH,CADD,CADJ;AAYH;;AApCiD","sourcesContent":["import React, {Component} from \"react\"\nimport { NavLink } from \"react-router-dom\";\nimport Airtable from \"airtable\";\nimport './style.css'\n\nconst base = new Airtable({ apiKey: \"keyHHrGcNLiewGh05\" }).base(\n  \"appnnQqeeXZmvVJvB\"\n);\n\nexport default class Conferences extends Component{\n    constructor(props){\n        super(props);\n        this.state={conference:[]}\n    }\n    componentDidMount() {\n        // let a = \"Tushar Bansal\";\n        //let name = `'${a}'`;\n        base(\"Imported table\")\n          .select({\n            view: \"Grid view\",\n            //filterByFormula: \"SEARCH(\" + name + \",{Participant Name})\",\n            fields:[\"Conference ID\",\"Participant Name\"]\n      })\n          .eachPage((records, fetchNextPage) => {\n             let arr = records.map((record) => record.fields[\"Conference ID\"]);\n             let a = [...new Set(arr)];\n            this.setState({ conference: a });\n            fetchNextPage();\n          });\n      }\nrender(){\n\n    \n    return(\n        <div>\n        {this.state.conference.map((value) => (\n            <div className=\"card\">\n                <div className=\"card-body\">\n              <NavLink to={`/Conference/${value}`}>\n               Conference ID- {value}\n              </NavLink>\n              </div>\n        </div>))}\n        </div>\n    )\n}\n}"]},"metadata":{},"sourceType":"module"}