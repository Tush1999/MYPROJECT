{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Desktop/Vinsol/My Project/b/src/Components/Employees/Employees.js\";\nimport React, { Component } from \"react\";\nimport ShowData from \"./ShowData\";\nimport Airtable from \"airtable\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base = new Airtable({\n  apiKey: \"keyHHrGcNLiewGh05\"\n}).base(\"appnnQqeeXZmvVJvB\");\nexport default class Employees extends Component {\n  constructor(props) {\n    super(props);\n\n    this.trackScrolling = () => {\n      if (this.container.current.getBoundingClientRect().bottom <= window.innerHeight) {\n        console.log(\"we reached bottom\");\n        document.removeEventListener(\"scroll\", this.trackScrolling);\n      }\n    };\n\n    this.fetchData = () => {\n      base(\"Imported table\").select({\n        view: \"Grid view\",\n        maxRecords: 10\n      }).eachPage((records, fetchNextPage) => {\n        let array = records.map(record => ({\n          pName: record.fields[\"Participant Name\"],\n          pId: record.fields[\"Participant Identifier\"]\n        }));\n        const result = [];\n        const map = new Map();\n\n        for (const item of array) {\n          if (!map.has(item.pName)) {\n            map.set(item.pName, true);\n            result.push({\n              pName: item.pName,\n              pId: item.pId\n            });\n          }\n        }\n\n        this.setState({\n          employees: result\n        });\n        fetchNextPage();\n      });\n    };\n\n    this.handleSearch = e => {\n      this.setState({\n        searchField: e.target.value\n      });\n    };\n\n    this.state = {\n      searchField: \"\",\n      employees: []\n    };\n    this.container = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    document.addEventListener(\"scroll\", this.trackScrolling);\n  }\n\n  render() {\n    var filteredData = this.state.employees.filter(val => val.pName.toLowerCase().includes(this.state.searchField.toLowerCase())).sort((a, b) => a.pName.localeCompare(b.pName));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: \"30%\"\n          },\n          className: \"form-control\",\n          type: \"search\",\n          value: this.state.searchField,\n          onChange: this.handleSearch,\n          placeholder: \"search here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: this.container,\n          children: /*#__PURE__*/_jsxDEV(ShowData, {\n            data: filteredData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/tushar/Desktop/Vinsol/My Project/b/src/Components/Employees/Employees.js"],"names":["React","Component","ShowData","Airtable","base","apiKey","Employees","constructor","props","trackScrolling","container","current","getBoundingClientRect","bottom","window","innerHeight","console","log","document","removeEventListener","fetchData","select","view","maxRecords","eachPage","records","fetchNextPage","array","map","record","pName","fields","pId","result","Map","item","has","set","push","setState","employees","handleSearch","e","searchField","target","value","state","createRef","componentDidMount","addEventListener","render","filteredData","filter","val","toLowerCase","includes","sort","a","b","localeCompare","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ShowData from \"./ShowData\";\nimport Airtable from \"airtable\";\nimport \"./style.css\";\n\nconst base = new Airtable({ apiKey: \"keyHHrGcNLiewGh05\" }).base(\n  \"appnnQqeeXZmvVJvB\"\n);\n\nexport default class Employees extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { searchField: \"\", employees: [] };\n    this.container=React.createRef()\n  }\n  componentDidMount() {\n    this.fetchData()\n    document.addEventListener(\"scroll\",this.trackScrolling)\n  }\n  trackScrolling=()=>{\n    if(this.container.current.getBoundingClientRect().bottom<=window.innerHeight){\n      console.log(\"we reached bottom\")\n      document.removeEventListener(\"scroll\",this.trackScrolling)\n     \n   }\n  }\n  fetchData=()=>{\n    base(\"Imported table\")\n    .select({\n      view: \"Grid view\",\n      maxRecords:10\n    })\n    .eachPage((records, fetchNextPage) => {\n      let array = records.map((record) => ({\n        pName: record.fields[\"Participant Name\"],\n        pId: record.fields[\"Participant Identifier\"],\n      }));\n      const result = [];\n      const map = new Map();\n      for (const item of array) {\n        if (!map.has(item.pName)) {\n          map.set(item.pName, true);\n          result.push({\n            pName: item.pName,\n            pId: item.pId,\n          });\n        }\n      }\n      this.setState({ employees: result });\n      fetchNextPage();\n    });\n  }\n  handleSearch = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    var filteredData = this.state.employees\n      .filter((val) =>\n        val.pName.toLowerCase().includes(this.state.searchField.toLowerCase())\n      )\n      .sort((a, b) => a.pName.localeCompare(b.pName));\n    return (\n      <div className=\"rightbar\">\n        <div>\n          <input\n            style={{ width: \"30%\" }}\n            className=\"form-control\"\n            type=\"search\"\n            value={this.state.searchField}\n            onChange={this.handleSearch}\n            placeholder=\"search here\"\n          />\n          <div ref={this.container}>\n            <ShowData data={filteredData} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}