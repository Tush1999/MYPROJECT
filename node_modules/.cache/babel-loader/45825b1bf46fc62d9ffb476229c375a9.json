{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Desktop/My Project/Company-project/src/ConferenceData.js\";\nimport React, { Component } from \"react\";\nimport Airtable from \"airtable\";\nimport './style.css';\nconst base = new Airtable({\n  apiKey: \"keyHHrGcNLiewGh05\"\n}).base(\"appnnQqeeXZmvVJvB\");\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conference: []\n    };\n  }\n\n  componentDidMount() {\n    this.name = this.props.name.match.params.name;\n    let a = `'${this.name}'`;\n    console.log(a);\n    base(\"Imported table\").select({\n      view: \"Grid view\",\n      filterByFormula: \"SEARCH(\" + a + \",{Conference ID})\"\n    }).eachPage((records, fetchNextPage) => {\n      this.setState({\n        conference: records\n      });\n      fetchNextPage();\n    });\n  }\n\n  render() {\n    console.log(this.state.conference);\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, \"hello\");\n  }\n\n}","map":{"version":3,"sources":["/home/tushar/Desktop/My Project/Company-project/src/ConferenceData.js"],"names":["React","Component","Airtable","base","apiKey","Conferences","constructor","props","state","conference","componentDidMount","name","match","params","a","console","log","select","view","filterByFormula","eachPage","records","fetchNextPage","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,aAAP;AAEA,MAAMC,IAAI,GAAG,IAAID,QAAJ,CAAa;AAAEE,EAAAA,MAAM,EAAE;AAAV,CAAb,EAA8CD,IAA9C,CACX,mBADW,CAAb;AAIA,eAAe,MAAME,WAAN,SAA0BJ,SAA1B,CAAmC;AAC9CK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAX;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,IAAL,GAAY,KAAKJ,KAAL,CAAWI,IAAX,CAAgBC,KAAhB,CAAsBC,MAAtB,CAA6BF,IAAzC;AACA,QAAIG,CAAC,GAAI,IAAG,KAAKH,IAAK,GAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAX,IAAAA,IAAI,CAAC,gBAAD,CAAJ,CACGc,MADH,CACU;AACNC,MAAAA,IAAI,EAAE,WADA;AAENC,MAAAA,eAAe,EAAE,YAAYL,CAAZ,GAAgB;AAF3B,KADV,EAKGM,QALH,CAKY,CAACC,OAAD,EAAUC,aAAV,KAA4B;AACpC,WAAKC,QAAL,CAAc;AAAEd,QAAAA,UAAU,EAAEY;AAAd,OAAd;AACAC,MAAAA,aAAa;AACd,KARH;AASD;;AACDE,EAAAA,MAAM,GAAE;AACJT,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,UAAvB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAGH;;AAxB2C","sourcesContent":["import React, {Component} from \"react\"\nimport Airtable from \"airtable\";\nimport './style.css'\n\nconst base = new Airtable({ apiKey: \"keyHHrGcNLiewGh05\" }).base(\n  \"appnnQqeeXZmvVJvB\"\n);\n\nexport default class Conferences extends Component{\n    constructor(props){\n        super(props)\n        this.state={conference:[]}\n    }\n    componentDidMount() {\n        this.name = this.props.name.match.params.name;\n        let a = `'${this.name}'`;\n        console.log(a);\n        base(\"Imported table\")\n          .select({\n            view: \"Grid view\",\n            filterByFormula: \"SEARCH(\" + a + \",{Conference ID})\",\n          })\n          .eachPage((records, fetchNextPage) => {\n            this.setState({ conference: records });\n            fetchNextPage();\n          });\n      }\n      render(){\n          console.log(this.state.conference)\n          return(\n              <h1>hello</h1>\n          )\n      }\n}"]},"metadata":{},"sourceType":"module"}