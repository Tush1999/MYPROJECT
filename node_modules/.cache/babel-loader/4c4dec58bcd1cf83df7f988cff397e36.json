{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Desktop/My Project/Company-project/src/Details.js\";\nimport React, { Component } from \"react\";\nimport Airtable from \"airtable\";\nconst base = new Airtable({\n  apiKey: \"keyHHrGcNLiewGh05\"\n}).base(\"appnnQqeeXZmvVJvB\");\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showData = data => {\n      console.log(\"show data\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, \"hello guys I ma back\"), \"Audio Receive Duration: \", data[\"Audio Receive Duration\"], \"Audio Receive Packet Loss Max: \", data[\"Audio Receive Packet Loss Max\"], \"Audio Receive Packet Loss Mean: \", data[\"Audio Receive Packet Loss Mean\"], \"Audio Send Bitrate Mean in kbps:\", \" \", data[\"Audio Send Bitrate Mean in kbps\"], \"Audio Send Duration: \", data[\"Audio Send Duration\"], \"Audio Send Packet Loss Max: \", data[\"Audio Send Packet Loss Max\"], \"Audio Send Packet Loss Mean: \", data[\"Audio Send Packet Loss Mean\"], \"Calendar Event Id: \", data[\"Calendar Event Id\"], \"City: \", data[\"City\"], \"Client Type: \", data[\"Client Type\"], \"Conference ID: \", data[\"Conference ID\"], \"Country: \", data.Country, \"Date: \", data.Date, \"Duration: \", data.Duration, \"Event Description:\", data[\"Event Description\"], \"Event Name: \", data[\"Event Name\"], \"IP Address: \", data[\"IP Address\"], \"Meeting Code: \", data[\"Meeting Code\"], \"Organizer Email: \", data[\"Organizer Email\"], \"Participant Identifier: \", data[\"Participant Identifier\"]);\n    };\n\n    this.a = () => {\n      let data = this.state.employee[0];\n      if (data) this.showData(data.fields);else console.log(\"test failed\");\n    };\n\n    this.state = {\n      employee: []\n    };\n  }\n\n  componentDidMount() {\n    let name = this.props.name.match.params.name;\n    let meeting = this.props.name.match.params.meeting;\n    let a = `'${meeting}'`;\n    base(\"Imported table\").select({\n      view: \"Grid view\",\n      filterByFormula: \"AND({Participant Name}=\" + `'${name}'` + \",{Meeting Code}=\" + `'${meeting}'` + \")\"\n    }).eachPage((records, fetchNextPage) => {\n      this.setState({\n        employee: records\n      });\n      fetchNextPage();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"Hello guys\", this.a());\n  }\n\n}","map":{"version":3,"sources":["/home/tushar/Desktop/My Project/Company-project/src/Details.js"],"names":["React","Component","Airtable","base","apiKey","Conferences","constructor","props","showData","data","console","log","Country","Date","Duration","a","state","employee","fields","componentDidMount","name","match","params","meeting","select","view","filterByFormula","eachPage","records","fetchNextPage","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,IAAI,GAAG,IAAID,QAAJ,CAAa;AAAEE,EAAAA,MAAM,EAAE;AAAV,CAAb,EAA8CD,IAA9C,CACX,mBADW,CAAb;AAIA,eAAe,MAAME,WAAN,SAA0BJ,SAA1B,CAAoC;AACjDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,QAvBmB,GAuBPC,IAAD,IAAU;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACF,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,8BAE4BF,IAAI,CAAC,wBAAD,CAFhC,qCAGkCA,IAAI,CAAC,+BAAD,CAHtC,sCAImCA,IAAI,CAAC,gCAAD,CAJvC,sCAKmC,GALnC,EAMGA,IAAI,CAAC,iCAAD,CANP,2BAOwBA,IAAI,CAAC,qBAAD,CAP5B,kCAQ+BA,IAAI,CAAC,4BAAD,CARnC,mCASgCA,IAAI,CAAC,6BAAD,CATpC,yBAUsBA,IAAI,CAAC,mBAAD,CAV1B,YAWSA,IAAI,CAAC,MAAD,CAXb,mBAYgBA,IAAI,CAAC,aAAD,CAZpB,qBAakBA,IAAI,CAAC,eAAD,CAbtB,eAcYA,IAAI,CAACG,OAdjB,YAeSH,IAAI,CAACI,IAfd,gBAgBaJ,IAAI,CAACK,QAhBlB,wBAiBqBL,IAAI,CAAC,mBAAD,CAjBzB,kBAkBeA,IAAI,CAAC,YAAD,CAlBnB,kBAmBeA,IAAI,CAAC,YAAD,CAnBnB,oBAoBiBA,IAAI,CAAC,cAAD,CApBrB,uBAqBoBA,IAAI,CAAC,iBAAD,CArBxB,8BAsB2BA,IAAI,CAAC,wBAAD,CAtB/B,CADF;AA0BD,KAnDkB;;AAAA,SAoDnBM,CApDmB,GAoDjB,MAAI;AACF,UAAIN,IAAI,GAAC,KAAKO,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAAT;AACA,UAAGR,IAAH,EACA,KAAKD,QAAL,CAAcC,IAAI,CAACS,MAAnB,EADA,KAGAR,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,KA1DkB;;AAEjB,SAAKK,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AACDE,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,IAAI,GAAG,KAAKb,KAAL,CAAWa,IAAX,CAAgBC,KAAhB,CAAsBC,MAAtB,CAA6BF,IAAxC;AACA,QAAIG,OAAO,GAAG,KAAKhB,KAAL,CAAWa,IAAX,CAAgBC,KAAhB,CAAsBC,MAAtB,CAA6BC,OAA3C;AACA,QAAIR,CAAC,GAAI,IAAGQ,OAAQ,GAApB;AACApB,IAAAA,IAAI,CAAC,gBAAD,CAAJ,CACGqB,MADH,CACU;AACNC,MAAAA,IAAI,EAAE,WADA;AAENC,MAAAA,eAAe,EACb,4BACC,IAAGN,IAAK,GADT,GAEA,kBAFA,GAGC,IAAGG,OAAQ,GAHZ,GAIA;AAPI,KADV,EAUGI,QAVH,CAUY,CAACC,OAAD,EAAUC,aAAV,KAA4B;AACpC,WAAKC,QAAL,CAAc;AAAEb,QAAAA,QAAQ,EAAEW;AAAZ,OAAd;AACAC,MAAAA,aAAa;AACd,KAbH;AAcD;;AAqCDE,EAAAA,MAAM,GAAG;AAEP,wBAAO,wDAEN,KAAKhB,CAAL,EAFM,CAAP;AAID;;AAlEgD","sourcesContent":["import React, { Component } from \"react\";\nimport Airtable from \"airtable\";\n\nconst base = new Airtable({ apiKey: \"keyHHrGcNLiewGh05\" }).base(\n  \"appnnQqeeXZmvVJvB\"\n);\n\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { employee: [] };\n  }\n  componentDidMount() {\n    let name = this.props.name.match.params.name;\n    let meeting = this.props.name.match.params.meeting;\n    let a = `'${meeting}'`;\n    base(\"Imported table\")\n      .select({\n        view: \"Grid view\",\n        filterByFormula:\n          \"AND({Participant Name}=\" +\n          `'${name}'` +\n          \",{Meeting Code}=\" +\n          `'${meeting}'` +\n          \")\",\n      })\n      .eachPage((records, fetchNextPage) => {\n        this.setState({ employee: records });\n        fetchNextPage();\n      });\n  }\n  showData = (data) => {\n      console.log(\"show data\")\n    return (\n      <div>\n        <h1>hello guys I ma back</h1>\n         Audio Receive Duration: {data[\"Audio Receive Duration\"]}\n        Audio Receive Packet Loss Max: {data[\"Audio Receive Packet Loss Max\"]}\n        Audio Receive Packet Loss Mean: {data[\"Audio Receive Packet Loss Mean\"]}\n        Audio Send Bitrate Mean in kbps:{\" \"}\n        {data[\"Audio Send Bitrate Mean in kbps\"]}\n        Audio Send Duration: {data[\"Audio Send Duration\"]}\n        Audio Send Packet Loss Max: {data[\"Audio Send Packet Loss Max\"]}\n        Audio Send Packet Loss Mean: {data[\"Audio Send Packet Loss Mean\"]}\n        Calendar Event Id: {data[\"Calendar Event Id\"]}\n        City: {data[\"City\"]}\n        Client Type: {data[\"Client Type\"]}\n        Conference ID: {data[\"Conference ID\"]}\n        Country: {data.Country}\n        Date: {data.Date}\n        Duration: {data.Duration}\n        Event Description:{data[\"Event Description\"]}\n        Event Name: {data[\"Event Name\"]}\n        IP Address: {data[\"IP Address\"]}\n        Meeting Code: {data[\"Meeting Code\"]}\n        Organizer Email: {data[\"Organizer Email\"]}\n        Participant Identifier: {data[\"Participant Identifier\"]}\n      </div>\n    );\n  };\n  a=()=>{\n      let data=this.state.employee[0]\n      if(data)\n      this.showData(data.fields)\n      else\n      console.log(\"test failed\")\n  }\n  render() {\n   \n    return <>\n    Hello guys\n    {this.a()}\n    </>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}