{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Desktop/Vinsol/My Project/b/src/Components/Employees/Employees.js\";\nimport React, { Component } from \"react\";\nimport ShowData from \"./ShowData\";\nimport SideBar from \"../../SideBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Airtable from \"airtable\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst base = new Airtable({\n  apiKey: \"keyHHrGcNLiewGh05\"\n}).base(\"appnnQqeeXZmvVJvB\");\nexport default class Employees extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = () => {\n      base(\"Imported table\").select({\n        view: \"Grid view\",\n        pageSize: this.state.size\n      }).eachPage((records, fetchNextPage) => {\n        let array = records.map(record => ({\n          pName: record.fields[\"Participant Name\"],\n          pId: record.fields[\"Participant Identifier\"]\n        }));\n        let a = [...this.state.employees, ...array];\n        const result = [];\n        const map = new Map();\n\n        for (const item of a) {\n          if (!map.has(item.pName)) {\n            map.set(item.pName, true);\n            result.push({\n              pName: item.pName,\n              pId: item.pId\n            });\n          }\n        } //console.log(result);\n\n\n        this.setState({\n          employees: result\n        });\n      });\n    };\n\n    this.handleSearch = e => {\n      this.setState({\n        searchField: e.target.value\n      });\n    };\n\n    this.handleNext = () => {\n      this.setState({\n        size: this.state.size + 15\n      });\n      this.fetchData();\n    };\n\n    this.state = {\n      searchField: \"\",\n      employees: [],\n      size: 10,\n      loading: true\n    };\n    this.container = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    var filteredData = this.state.employees.filter(val => val.pName.toLowerCase().includes(this.state.searchField.toLowerCase())).sort((a, b) => a.pName.localeCompare(b.pName));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightbar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: \"30%\"\n            },\n            className: \"form-control\",\n            type: \"search\",\n            value: this.state.searchField,\n            onChange: this.handleSearch,\n            placeholder: \"search here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"scrollableDiv\",\n            children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n              dataLength: this.state.employees.length,\n              next: this.handleNext,\n              hasMore: this.state.loading //loader={<h4>Loading...</h4>}\n              ,\n              children: /*#__PURE__*/_jsxDEV(ShowData, {\n                data: filteredData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/tushar/Desktop/Vinsol/My Project/b/src/Components/Employees/Employees.js"],"names":["React","Component","ShowData","SideBar","InfiniteScroll","Airtable","base","apiKey","Employees","constructor","props","fetchData","select","view","pageSize","state","size","eachPage","records","fetchNextPage","array","map","record","pName","fields","pId","a","employees","result","Map","item","has","set","push","setState","handleSearch","e","searchField","target","value","handleNext","loading","container","createRef","componentDidMount","render","filteredData","filter","val","toLowerCase","includes","sort","b","localeCompare","width","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ShowData from \"./ShowData\";\nimport SideBar from \"../../SideBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Airtable from \"airtable\";\nimport \"./style.css\";\n\nconst base = new Airtable({ apiKey: \"keyHHrGcNLiewGh05\" }).base(\n  \"appnnQqeeXZmvVJvB\"\n);\n\nexport default class Employees extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { searchField: \"\", employees: [], size: 10,loading:true};\n    this.container = React.createRef();\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  fetchData = () => {\n    base(\"Imported table\")\n      .select({\n        view: \"Grid view\",\n        pageSize: this.state.size,\n      })\n      .eachPage((records, fetchNextPage) => {\n        let array = records.map((record) => ({\n          pName: record.fields[\"Participant Name\"],\n          pId: record.fields[\"Participant Identifier\"],\n        }));\n        let a = [...this.state.employees, ...array];\n        const result = [];\n        const map = new Map();\n        for (const item of a) {\n          if (!map.has(item.pName)) {\n            map.set(item.pName, true);\n            result.push({\n              pName: item.pName,\n              pId: item.pId,\n            });\n          }\n        }\n        //console.log(result);\n        this.setState({ employees: result });\n      });\n  };\n  handleSearch = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  handleNext = () => {\n    this.setState({ size: this.state.size + 15 });\n    this.fetchData();\n  };\n  render() {\n    var filteredData = this.state.employees\n      .filter((val) =>\n        val.pName.toLowerCase().includes(this.state.searchField.toLowerCase())\n      )\n      .sort((a, b) => a.pName.localeCompare(b.pName));\n    return (\n      <>\n      <SideBar />\n      <div className=\"rightbar\">\n        <div>\n          <input\n            style={{ width: \"30%\" }}\n            className=\"form-control\"\n            type=\"search\"\n            value={this.state.searchField}\n            onChange={this.handleSearch}\n            placeholder=\"search here\"\n          />\n          <div id=\"scrollableDiv\">\n            <InfiniteScroll\n              dataLength={this.state.employees.length}\n              next={this.handleNext}\n              hasMore={this.state.loading}\n              //loader={<h4>Loading...</h4>}\n            >\n              <ShowData data={filteredData} />\n            </InfiniteScroll>\n          </div>\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}