{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Desktop/Vinsol/My Project/b/src/Components/Conference/ConferenceData.js\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Airtable from \"airtable\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base = new Airtable({\n  apiKey: \"keyHHrGcNLiewGh05\"\n}).base(\"appnnQqeeXZmvVJvB\");\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conference: []\n    };\n  }\n\n  componentDidMount() {\n    this.name = this.props.name.match.params.id;\n    let conferenceId = `'${this.name}'`;\n    base(\"Imported table\").select({\n      view: \"Grid view\",\n      filterByFormula: \"SEARCH(\" + conferenceId + \",{Conference ID})\"\n    }).eachPage((records, fetchNextPage) => {\n      this.setState({\n        conference: records\n      });\n      fetchNextPage();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightbar\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Participants Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Email Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Organizer Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scopr: \"row\",\n              children: \"Audio Send Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.conference.map((value, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                to: `/employee/${value.fields[\"Participant Identifier\"]}`,\n                className: \"link-conference\",\n                children: value.fields[\"Participant Name\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.fields[\"Participant Identifier\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.fields[\"Organizer Email\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.fields[\"Date\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.fields[\"Audio Send Duration\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/tushar/Desktop/Vinsol/My Project/b/src/Components/Conference/ConferenceData.js"],"names":["React","Component","NavLink","Airtable","base","apiKey","Conferences","constructor","props","state","conference","componentDidMount","name","match","params","id","conferenceId","select","view","filterByFormula","eachPage","records","fetchNextPage","setState","render","map","value","index","fields"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Airtable from \"airtable\";\nimport \"./style.css\";\n\nconst base = new Airtable({ apiKey: \"keyHHrGcNLiewGh05\" }).base(\n  \"appnnQqeeXZmvVJvB\"\n);\n\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { conference: [] };\n  }\n  componentDidMount() {\n    this.name = this.props.name.match.params.id;\n    let conferenceId = `'${this.name}'`;\n    base(\"Imported table\")\n      .select({\n        view: \"Grid view\",\n        filterByFormula: \"SEARCH(\" + conferenceId + \",{Conference ID})\",\n      })\n      .eachPage((records, fetchNextPage) => {\n        this.setState({ conference: records });\n        fetchNextPage();\n      });\n  }\n  render() {\n    return (\n      <div className=\"rightbar\">\n        <table className=\"table\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th scope=\"row\">Participants Name</th>\n              <th scope=\"row\">Email Id</th>\n              <th scope=\"row\">Organizer Email</th>\n              <th scope=\"row\">Date</th>\n              <th scopr=\"row\">Audio Send Duration</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.conference.map((value,index) => (\n              <tr key={index}>\n                <td>\n                  <NavLink\n                    to={`/employee/${value.fields[\"Participant Identifier\"]}`}\n                    className=\"link-conference\"\n                  >\n                    {value.fields[\"Participant Name\"]}\n                  </NavLink>\n                </td>\n                <td>{value.fields[\"Participant Identifier\"]}</td>\n                <td>{value.fields[\"Organizer Email\"]}</td>\n                <td>{value.fields[\"Date\"]}</td>\n                <td>{value.fields[\"Audio Send Duration\"]}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}