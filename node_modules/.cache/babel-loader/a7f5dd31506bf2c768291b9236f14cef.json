{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar exponential_backoff_with_jitter_1 = __importDefault(require(\"./exponential_backoff_with_jitter\"));\n\nvar object_to_query_param_string_1 = __importDefault(require(\"./object_to_query_param_string\"));\n\nvar package_version_1 = __importDefault(require(\"./package_version\"));\n\nvar fetch_1 = __importDefault(require(\"./fetch\"));\n\nvar abort_controller_1 = __importDefault(require(\"./abort-controller\"));\n\nvar userAgent = \"Airtable.js/\" + package_version_1.default;\n\nfunction runAction(base, method, path, queryParams, bodyData, callback, numAttempts) {\n  var url = base._airtable._endpointUrl + \"/v\" + base._airtable._apiVersionMajor + \"/\" + base._id + path + \"?\" + object_to_query_param_string_1.default(queryParams);\n  var headers = {\n    authorization: \"Bearer \" + base._airtable._apiKey,\n    'x-api-version': base._airtable._apiVersion,\n    'x-airtable-application-id': base.getId(),\n    'content-type': 'application/json'\n  };\n  var isBrowser = typeof window !== 'undefined'; // Some browsers do not allow overriding the user agent.\n  // https://github.com/Airtable/airtable.js/issues/52\n\n  if (isBrowser) {\n    headers['x-airtable-user-agent'] = userAgent;\n  } else {\n    headers['User-Agent'] = userAgent;\n  }\n\n  var controller = new abort_controller_1.default();\n  var normalizedMethod = method.toUpperCase();\n  var options = {\n    method: normalizedMethod,\n    headers: headers,\n    signal: controller.signal\n  };\n\n  if (bodyData !== null) {\n    if (normalizedMethod === 'GET' || normalizedMethod === 'HEAD') {\n      console.warn('body argument to runAction are ignored with GET or HEAD requests');\n    } else {\n      options.body = JSON.stringify(bodyData);\n    }\n  }\n\n  var timeout = setTimeout(function () {\n    controller.abort();\n  }, base._airtable._requestTimeout);\n  fetch_1.default(url, options).then(function (resp) {\n    clearTimeout(timeout);\n\n    if (resp.status === 429 && !base._airtable._noRetryIfRateLimited) {\n      var backoffDelayMs = exponential_backoff_with_jitter_1.default(numAttempts);\n      setTimeout(function () {\n        runAction(base, method, path, queryParams, bodyData, callback, numAttempts + 1);\n      }, backoffDelayMs);\n    } else {\n      resp.json().then(function (body) {\n        var error = base._checkStatusForError(resp.status, body); // Ensure Response interface matches interface from\n        // `request` Response object\n\n\n        var r = {};\n        Object.keys(resp).forEach(function (property) {\n          r[property] = resp[property];\n        });\n        r.body = body;\n        r.statusCode = resp.status;\n        callback(error, r, body);\n      }).catch(function () {\n        callback(base._checkStatusForError(resp.status));\n      });\n    }\n  }).catch(function (error) {\n    clearTimeout(timeout);\n    callback(error);\n  });\n}\n\nmodule.exports = runAction;","map":null,"metadata":{},"sourceType":"script"}