{"ast":null,"code":"import React, { Component } from \"react\";\nimport Airtable from \"airtable\";\nconst base = new Airtable({\n  apiKey: \"keyHHrGcNLiewGh05\"\n}).base(\"appnnQqeeXZmvVJvB\");\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showData = data => {\n      console.log(\"show data\"); // return (\n      //   <div>\n      //     Audio Receive Duration: {data[\"Audio Receive Duration\"]}\n      //     Audio Receive Packet Loss Max: {data[\"Audio Receive Packet Loss Max\"]}\n      //     Audio Receive Packet Loss Mean: {data[\"Audio Receive Packet Loss Mean\"]}\n      //     Audio Send Bitrate Mean in kbps:{\" \"}\n      //     {data[\"Audio Send Bitrate Mean in kbps\"]}\n      //     Audio Send Duration: {data[\"Audio Send Duration\"]}\n      //     Audio Send Packet Loss Max: {data[\"Audio Send Packet Loss Max\"]}\n      //     Audio Send Packet Loss Mean: {data[\"Audio Send Packet Loss Mean\"]}\n      //     Calendar Event Id: {data[\"Calendar Event Id\"]}\n      //     City: {data[\"City\"]}\n      //     Client Type: {data[\"Client Type\"]}\n      //     Conference ID: {data[\"Conference ID\"]}\n      //     Country: {data.Country}\n      //     Date: {data.Date}\n      //     Duration: {data.Duration}\n      //     Event Description:{data[\"Event Description\"]}\n      //     Event Name: {data[\"Event Name\"]}\n      //     IP Address: {data[\"IP Address\"]}\n      //     Meeting Code: {data[\"Meeting Code\"]}\n      //     Organizer Email: {data[\"Organizer Email\"]}\n      //     Participant Identifier: {data[\"Participant Identifier\"]}\n      //   </div>\n      // );\n    };\n\n    this.a = () => {\n      // let data=this.state.employee[0].fields\n      this.showData();\n    };\n\n    this.state = {\n      employee: []\n    };\n  }\n\n  componentDidMount() {\n    let name = this.props.name.match.params.name;\n    let meeting = this.props.name.match.params.meeting;\n    let a = `'${meeting}'`;\n    base(\"Imported table\").select({\n      view: \"Grid view\",\n      filterByFormula: \"AND({Participant Name}=\" + `'${name}'` + \",{Meeting Code}=\" + `'${meeting}'` + \")\"\n    }).eachPage((records, fetchNextPage) => {\n      this.setState({\n        employee: records\n      });\n      fetchNextPage();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.a());\n  }\n\n}","map":{"version":3,"sources":["/home/tushar/Desktop/My Project/Company-project/src/Details.js"],"names":["React","Component","Airtable","base","apiKey","Conferences","constructor","props","showData","data","console","log","a","state","employee","componentDidMount","name","match","params","meeting","select","view","filterByFormula","eachPage","records","fetchNextPage","setState","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,IAAI,GAAG,IAAID,QAAJ,CAAa;AAAEE,EAAAA,MAAM,EAAE;AAAV,CAAb,EAA8CD,IAA9C,CACX,mBADW,CAAb;AAIA,eAAe,MAAME,WAAN,SAA0BJ,SAA1B,CAAoC;AACjDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,QAvBmB,GAuBPC,IAAD,IAAU;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADiB,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAlDkB;;AAAA,SAmDnBC,CAnDmB,GAmDjB,MAAI;AACH;AACC,WAAKJ,QAAL;AACH,KAtDkB;;AAEjB,SAAKK,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,IAAI,GAAG,KAAKT,KAAL,CAAWS,IAAX,CAAgBC,KAAhB,CAAsBC,MAAtB,CAA6BF,IAAxC;AACA,QAAIG,OAAO,GAAG,KAAKZ,KAAL,CAAWS,IAAX,CAAgBC,KAAhB,CAAsBC,MAAtB,CAA6BC,OAA3C;AACA,QAAIP,CAAC,GAAI,IAAGO,OAAQ,GAApB;AACAhB,IAAAA,IAAI,CAAC,gBAAD,CAAJ,CACGiB,MADH,CACU;AACNC,MAAAA,IAAI,EAAE,WADA;AAENC,MAAAA,eAAe,EACb,4BACC,IAAGN,IAAK,GADT,GAEA,kBAFA,GAGC,IAAGG,OAAQ,GAHZ,GAIA;AAPI,KADV,EAUGI,QAVH,CAUY,CAACC,OAAD,EAAUC,aAAV,KAA4B;AACpC,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,QAAQ,EAAEU;AAAZ,OAAd;AACAC,MAAAA,aAAa;AACd,KAbH;AAcD;;AAiCDE,EAAAA,MAAM,GAAG;AAEP,wBAAO,0CAAG,KAAKf,CAAL,EAAH,CAAP;AACD;;AA3DgD","sourcesContent":["import React, { Component } from \"react\";\nimport Airtable from \"airtable\";\n\nconst base = new Airtable({ apiKey: \"keyHHrGcNLiewGh05\" }).base(\n  \"appnnQqeeXZmvVJvB\"\n);\n\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { employee: [] };\n  }\n  componentDidMount() {\n    let name = this.props.name.match.params.name;\n    let meeting = this.props.name.match.params.meeting;\n    let a = `'${meeting}'`;\n    base(\"Imported table\")\n      .select({\n        view: \"Grid view\",\n        filterByFormula:\n          \"AND({Participant Name}=\" +\n          `'${name}'` +\n          \",{Meeting Code}=\" +\n          `'${meeting}'` +\n          \")\",\n      })\n      .eachPage((records, fetchNextPage) => {\n        this.setState({ employee: records });\n        fetchNextPage();\n      });\n  }\n  showData = (data) => {\n      console.log(\"show data\")\n    // return (\n    //   <div>\n    //     Audio Receive Duration: {data[\"Audio Receive Duration\"]}\n    //     Audio Receive Packet Loss Max: {data[\"Audio Receive Packet Loss Max\"]}\n    //     Audio Receive Packet Loss Mean: {data[\"Audio Receive Packet Loss Mean\"]}\n    //     Audio Send Bitrate Mean in kbps:{\" \"}\n    //     {data[\"Audio Send Bitrate Mean in kbps\"]}\n    //     Audio Send Duration: {data[\"Audio Send Duration\"]}\n    //     Audio Send Packet Loss Max: {data[\"Audio Send Packet Loss Max\"]}\n    //     Audio Send Packet Loss Mean: {data[\"Audio Send Packet Loss Mean\"]}\n    //     Calendar Event Id: {data[\"Calendar Event Id\"]}\n    //     City: {data[\"City\"]}\n    //     Client Type: {data[\"Client Type\"]}\n    //     Conference ID: {data[\"Conference ID\"]}\n    //     Country: {data.Country}\n    //     Date: {data.Date}\n    //     Duration: {data.Duration}\n    //     Event Description:{data[\"Event Description\"]}\n    //     Event Name: {data[\"Event Name\"]}\n    //     IP Address: {data[\"IP Address\"]}\n    //     Meeting Code: {data[\"Meeting Code\"]}\n    //     Organizer Email: {data[\"Organizer Email\"]}\n    //     Participant Identifier: {data[\"Participant Identifier\"]}\n    //   </div>\n    // );\n  };\n  a=()=>{\n     // let data=this.state.employee[0].fields\n      this.showData()\n  }\n  render() {\n\n    return <>{this.a()}</>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}