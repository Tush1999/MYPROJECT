{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Desktop/My Project/Company-project/src/Conferences.js\";\nimport React, { Component } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport Airtable from \"airtable\";\nimport \"./style.css\";\nconst base = new Airtable({\n  apiKey: \"keyHHrGcNLiewGh05\"\n}).base(\"appnnQqeeXZmvVJvB\");\n\nclass Conferences extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBack = () => {\n      this.props.history.push(\"/\");\n    };\n\n    this.state = {\n      conference: []\n    };\n  }\n\n  componentDidMount() {\n    // let a = \"Tushar Bansal\";\n    //let name = `'${a}'`;\n    base(\"Imported table\").select({\n      view: \"Grid view\",\n      //filterByFormula: \"SEARCH(\" + name + \",{Participant Name})\",\n      fields: [\"Conference ID\", \"Date\"]\n    }).eachPage((records, fetchNextPage) => {\n      let arr1 = records.map(record => ({\n        id: record.fields[\"Conference ID\"],\n        date: record.fields[\"Date\"]\n      }));\n      const result = [];\n      const map = new Map();\n\n      for (const item of arr1) {\n        if (!map.has(item.id)) {\n          map.set(item.id, true); // set any value to Map\n\n          result.push({\n            id: item.id,\n            date: item.date\n          });\n        }\n      }\n\n      console.log(result);\n      this.setState({\n        conference: result\n      });\n      fetchNextPage();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Go Back\"), this.state.conference.map(value => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `/Conference/${value.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, \"Conference ID- \", value.id, \" \", value.date)))));\n  }\n\n}\n\nexport default withRouter(Conferences);","map":{"version":3,"sources":["/home/tushar/Desktop/My Project/Company-project/src/Conferences.js"],"names":["React","Component","NavLink","withRouter","Airtable","base","apiKey","Conferences","constructor","props","handleBack","history","push","state","conference","componentDidMount","select","view","fields","eachPage","records","fetchNextPage","arr1","map","record","id","date","result","Map","item","has","set","console","log","setState","render","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,aAAP;AAEA,MAAMC,IAAI,GAAG,IAAID,QAAJ,CAAa;AAAEE,EAAAA,MAAM,EAAE;AAAV,CAAb,EAA8CD,IAA9C,CACX,mBADW,CAAb;;AAIA,MAAME,WAAN,SAA0BN,SAA1B,CAAoC;AAClCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkCnBC,UAlCmB,GAkCN,MAAM;AACjB,WAAKD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KApCkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACAV,IAAAA,IAAI,CAAC,gBAAD,CAAJ,CACGW,MADH,CACU;AACNC,MAAAA,IAAI,EAAE,WADA;AAEN;AACAC,MAAAA,MAAM,EAAE,CAAC,eAAD,EAAkB,MAAlB;AAHF,KADV,EAMGC,QANH,CAMY,CAACC,OAAD,EAAUC,aAAV,KAA4B;AACpC,UAAIC,IAAI,GAAGF,OAAO,CAACG,GAAR,CAAaC,MAAD,KAAa;AAClCC,QAAAA,EAAE,EAAED,MAAM,CAACN,MAAP,CAAc,eAAd,CAD8B;AAElCQ,QAAAA,IAAI,EAAEF,MAAM,CAACN,MAAP,CAAc,MAAd;AAF4B,OAAb,CAAZ,CAAX;AAIA,YAAMS,MAAM,GAAG,EAAf;AACA,YAAMJ,GAAG,GAAG,IAAIK,GAAJ,EAAZ;;AACA,WAAK,MAAMC,IAAX,IAAmBP,IAAnB,EAAyB;AACvB,YAAI,CAACC,GAAG,CAACO,GAAJ,CAAQD,IAAI,CAACJ,EAAb,CAAL,EAAuB;AACrBF,UAAAA,GAAG,CAACQ,GAAJ,CAAQF,IAAI,CAACJ,EAAb,EAAiB,IAAjB,EADqB,CACG;;AACxBE,UAAAA,MAAM,CAACf,IAAP,CAAY;AACVa,YAAAA,EAAE,EAAEI,IAAI,CAACJ,EADC;AAEVC,YAAAA,IAAI,EAAEG,IAAI,CAACH;AAFD,WAAZ;AAID;AACF;;AACDM,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,WAAKO,QAAL,CAAc;AAAEpB,QAAAA,UAAU,EAAEa;AAAd,OAAd;AACAN,MAAAA,aAAa;AACd,KAzBH;AA0BD;;AAIDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKzB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEG,KAAKG,KAAL,CAAWC,UAAX,CAAsBS,GAAtB,CAA2Ba,KAAD,iBACzB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAG,eAAcA,KAAK,CAACX,EAAG,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkBW,KAAK,CAACX,EADxB,OAC6BW,KAAK,CAACV,IADnC,CADF,CADF,CADD,CAFH,CADF;AAcD;;AArDiC;;AAuDpC,eAAevB,UAAU,CAACI,WAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport Airtable from \"airtable\";\nimport \"./style.css\";\n\nconst base = new Airtable({ apiKey: \"keyHHrGcNLiewGh05\" }).base(\n  \"appnnQqeeXZmvVJvB\"\n);\n\nclass Conferences extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { conference: [] };\n  }\n  componentDidMount() {\n    // let a = \"Tushar Bansal\";\n    //let name = `'${a}'`;\n    base(\"Imported table\")\n      .select({\n        view: \"Grid view\",\n        //filterByFormula: \"SEARCH(\" + name + \",{Participant Name})\",\n        fields: [\"Conference ID\", \"Date\"],\n      })\n      .eachPage((records, fetchNextPage) => {\n        let arr1 = records.map((record) => ({\n          id: record.fields[\"Conference ID\"],\n          date: record.fields[\"Date\"],\n        }));\n        const result = [];\n        const map = new Map();\n        for (const item of arr1) {\n          if (!map.has(item.id)) {\n            map.set(item.id, true); // set any value to Map\n            result.push({\n              id: item.id,\n              date: item.date,\n            });\n          }\n        }\n        console.log(result);\n        this.setState({ conference: result });\n        fetchNextPage();\n      });\n  }\n  handleBack = () => {\n    this.props.history.push(\"/\");\n  };\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleBack}>Go Back</button>\n        {this.state.conference.map((value) => (\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <NavLink to={`/Conference/${value.id}`}>\n                Conference ID- {value.id} {value.date}\n              </NavLink>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\nexport default withRouter(Conferences);\n"]},"metadata":{},"sourceType":"module"}