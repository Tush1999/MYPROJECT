{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Desktop/Vinsol/My Project/b/src/Components/Employees/Employees.js\";\nimport React, { Component } from \"react\";\nimport ShowData from \"./ShowData\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Airtable from \"airtable\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base = new Airtable({\n  apiKey: \"keyHHrGcNLiewGh05\"\n}).base(\"appnnQqeeXZmvVJvB\");\nexport default class Employees extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = () => {\n      base(\"Imported table\").select({\n        view: \"Grid view\",\n        maxRecords: 2\n      }).eachPage((records, fetchNextPage) => {\n        let array = records.map(record => ({\n          pName: record.fields[\"Participant Name\"],\n          pId: record.fields[\"Participant Identifier\"]\n        })); //const result = [];\n        // const map = new Map();\n        // for (const item of array) {\n        //   if (!map.has(item.pName)) {\n        //     map.set(item.pName, true);\n        //     result.push({\n        //       pName: item.pName,\n        //       pId: item.pId,\n        //     });\n        //   }\n        // }\n\n        this.setState({\n          employees: array\n        });\n      });\n    };\n\n    this.handleSearch = e => {\n      this.setState({\n        searchField: e.target.value\n      });\n    };\n\n    this.state = {\n      searchField: \"\",\n      employees: [],\n      size: 5\n    };\n    this.container = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  } //  componentDidUpdate(){\n  //     this.fetchData()\n  //  }\n\n\n  render() {\n    var filteredData = this.state.employees; //  .filter((val) =>\n    //   val.pName.toLowerCase().includes(this.state.searchField.toLowerCase()))\n    // .sort((a, b) => a.pName.localeCompare(b.pName))\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: \"30%\"\n          },\n          className: \"form-control\",\n          type: \"search\",\n          value: this.state.searchField,\n          onChange: this.handleSearch,\n          placeholder: \"search here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"scrollableDiv\",\n          children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n            dataLength: this.state.employees.length,\n            next: this.a,\n            hasMore: true,\n            loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(ShowData, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/tushar/Desktop/Vinsol/My Project/b/src/Components/Employees/Employees.js"],"names":["React","Component","ShowData","InfiniteScroll","Airtable","base","apiKey","Employees","constructor","props","fetchData","select","view","maxRecords","eachPage","records","fetchNextPage","array","map","record","pName","fields","pId","setState","employees","handleSearch","e","searchField","target","value","state","size","container","createRef","componentDidMount","render","filteredData","width","length","a"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,IAAI,GAAG,IAAID,QAAJ,CAAa;AAAEE,EAAAA,MAAM,EAAE;AAAV,CAAb,EAA8CD,IAA9C,CACX,mBADW,CAAb;AAIA,eAAe,MAAME,SAAN,SAAwBN,SAAxB,CAAkC;AAC/CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,SAXmB,GAWT,MAAI;AACZL,MAAAA,IAAI,CAAC,gBAAD,CAAJ,CACCM,MADD,CACQ;AACNC,QAAAA,IAAI,EAAE,WADA;AAENC,QAAAA,UAAU,EAAC;AAFL,OADR,EAKCC,QALD,CAKU,CAACC,OAAD,EAAUC,aAAV,KAA4B;AACpC,YAAIC,KAAK,GAAGF,OAAO,CAACG,GAAR,CAAaC,MAAD,KAAa;AACnCC,UAAAA,KAAK,EAAED,MAAM,CAACE,MAAP,CAAc,kBAAd,CAD4B;AAEnCC,UAAAA,GAAG,EAAEH,MAAM,CAACE,MAAP,CAAc,wBAAd;AAF8B,SAAb,CAAZ,CAAZ,CADoC,CAKpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,aAAKE,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAACP;AAAZ,SAAd;AACD,OAtBD;AAwBD,KApCkB;;AAAA,SAqCnBQ,YArCmB,GAqCHC,CAAD,IAAO;AACpB,WAAKH,QAAL,CAAc;AAAEI,QAAAA,WAAW,EAAED,CAAC,CAACE,MAAF,CAASC;AAAxB,OAAd;AACD,KAvCkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEH,MAAAA,WAAW,EAAE,EAAf;AAAmBH,MAAAA,SAAS,EAAE,EAA9B;AAAiCO,MAAAA,IAAI,EAAC;AAAtC,KAAb;AACA,SAAKC,SAAL,gBAAehC,KAAK,CAACiC,SAAN,EAAf;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKxB,SAAL;AACD,GAR8C,CAS/C;AACA;AACA;;;AA8BAyB,EAAAA,MAAM,GAAG;AACP,QAAIC,YAAY,GAAG,KAAKN,KAAL,CAAWN,SAA9B,CADO,CAEL;AACA;AACA;;AACF,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAA,gCACE;AACE,UAAA,KAAK,EAAE;AAAEa,YAAAA,KAAK,EAAE;AAAT,WADT;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,KAAK,EAAE,KAAKP,KAAL,CAAWH,WAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKF,YALjB;AAME,UAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAK,UAAA,EAAE,EAAC,eAAR;AAAA,iCACA,QAAC,cAAD;AACE,YAAA,UAAU,EAAE,KAAKK,KAAL,CAAWN,SAAX,CAAqBc,MADnC;AAEE,YAAA,IAAI,EAAE,KAAKC,CAFb;AAGE,YAAA,OAAO,EAAE,IAHX;AAIE,YAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJV;AAAA,mCAMA,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEH;AAAhB;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AAvE8C","sourcesContent":["import React, { Component } from \"react\";\nimport ShowData from \"./ShowData\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Airtable from \"airtable\";\nimport \"./style.css\";\n\nconst base = new Airtable({ apiKey: \"keyHHrGcNLiewGh05\" }).base(\n  \"appnnQqeeXZmvVJvB\"\n);\n\nexport default class Employees extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { searchField: \"\", employees: [],size:5 };\n    this.container=React.createRef()\n  }\n  componentDidMount() {\n    this.fetchData()\n  }\n  //  componentDidUpdate(){\n  //     this.fetchData()\n  //  }\n  fetchData=()=>{\n    base(\"Imported table\")\n    .select({\n      view: \"Grid view\",\n      maxRecords:2\n    })\n    .eachPage((records, fetchNextPage) => {\n      let array = records.map((record) => ({\n        pName: record.fields[\"Participant Name\"],\n        pId: record.fields[\"Participant Identifier\"],\n      }));\n      //const result = [];\n      // const map = new Map();\n      // for (const item of array) {\n      //   if (!map.has(item.pName)) {\n      //     map.set(item.pName, true);\n      //     result.push({\n      //       pName: item.pName,\n      //       pId: item.pId,\n      //     });\n      //   }\n      // }\n      this.setState({ employees:array})   \n    });\n  \n  }\n  handleSearch = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    var filteredData = this.state.employees\n      //  .filter((val) =>\n      //   val.pName.toLowerCase().includes(this.state.searchField.toLowerCase()))\n      // .sort((a, b) => a.pName.localeCompare(b.pName))\n    return (\n      <div className=\"rightbar\">\n        <div>\n          <input\n            style={{ width: \"30%\" }}\n            className=\"form-control\"\n            type=\"search\"\n            value={this.state.searchField}\n            onChange={this.handleSearch}\n            placeholder=\"search here\"\n          />\n          <div id=\"scrollableDiv\">\n          <InfiniteScroll\n            dataLength={this.state.employees.length}\n            next={this.a}\n            hasMore={true}\n            loader={<h4>Loading...</h4>}\n          >\n          <ShowData data={filteredData} />\n          </InfiniteScroll>\n        </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}