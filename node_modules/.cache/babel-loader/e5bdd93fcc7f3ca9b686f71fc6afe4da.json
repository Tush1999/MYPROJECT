{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Desktop/My Project/Company-project/src/Details.js\";\nimport React, { Component } from \"react\";\nimport Airtable from \"airtable\";\nimport { NavLink } from \"react-router-dom\";\nconst base = new Airtable({\n  apiKey: \"keyHHrGcNLiewGh05\"\n}).base(\"appnnQqeeXZmvVJvB\");\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employee: []\n    };\n  }\n\n  componentDidMount() {\n    let name = this.props.name.match.params.name;\n    let meeting = this.props.name.match.params.meeting;\n    base(\"Imported table\").select({\n      view: \"Grid view\",\n      filterByFormula: \"AND({Participant Identifier}=\" + `'${name}'` + \",{Conference ID}=\" + `'${meeting}'` + \")\"\n    }).eachPage((records, fetchNextPage) => {\n      this.setState({\n        employee: records\n      });\n      fetchNextPage();\n    });\n  }\n\n  render() {\n    var empCheck = this.state.employee[0];\n\n    if (empCheck) {\n      var data = empCheck.fields;\n      this.count = 1;\n    } else this.count = 0;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.count ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rightbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Meeting Details\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"Audio Receive Duration: \", data[\"Audio Receive Duration\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Audio Receive Packet Loss Max:\", \" \", data[\"Audio Receive Packet Loss Max\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Audio Receive Packet Loss Mean:\", \" \", data[\"Audio Receive Packet Loss Mean\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Audio Send Bitrate Mean in kbps:\", data[\"Audio Send Bitrate Mean in kbps\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Audio Send Duration: \", data[\"Audio Send Duration\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Calendar Event Id: \", data[\"Calendar Event Id\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"City: \", data[\"City\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Client Type: \", data[\"Client Type\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `/conference/${data[\"Conference ID\"]}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \" \", \"Conference ID: \", data[\"Conference ID\"], \" \")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Country: \", data.Country), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Date: \", data.Date), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Duration: \", data.Duration), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Event Description:\", data[\"Event Description\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Event Name: \", data[\"Event Name\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"IP Address: \", data[\"IP Address\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Meeting Code: \", data[\"Meeting Code\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Organizer Email: \", data[\"Organizer Email\"]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Participant Identifier: \", data[\"Participant Identifier\"])) : null);\n  }\n\n}","map":{"version":3,"sources":["/home/tushar/Desktop/My Project/Company-project/src/Details.js"],"names":["React","Component","Airtable","NavLink","base","apiKey","Conferences","constructor","props","state","employee","componentDidMount","name","match","params","meeting","select","view","filterByFormula","eachPage","records","fetchNextPage","setState","render","empCheck","data","fields","count","Country","Date","Duration"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Airtable from \"airtable\";\nimport { NavLink } from \"react-router-dom\";\n\nconst base = new Airtable({ apiKey: \"keyHHrGcNLiewGh05\" }).base(\n  \"appnnQqeeXZmvVJvB\"\n);\n\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { employee: [] };\n  }\n  componentDidMount() {\n    let name = this.props.name.match.params.name;\n    let meeting = this.props.name.match.params.meeting;\n    base(\"Imported table\")\n      .select({\n        view: \"Grid view\",\n        filterByFormula:\n          \"AND({Participant Identifier}=\" +\n          `'${name}'` +\n          \",{Conference ID}=\" +\n          `'${meeting}'` +\n          \")\",\n      })\n      .eachPage((records, fetchNextPage) => {\n        this.setState({ employee: records });\n        fetchNextPage();\n      });\n  }\n\n  render() {\n    var empCheck = this.state.employee[0];\n    if (empCheck) {\n      var data = empCheck.fields;\n      this.count = 1;\n    } else this.count = 0;\n\n    return (\n      <>\n        {this.count ? (\n          <div className=\"rightbar\">\n            <h1>Meeting Details</h1>\n            <p>Audio Receive Duration: {data[\"Audio Receive Duration\"]}</p>\n            <p>\n              Audio Receive Packet Loss Max:{\" \"}\n              {data[\"Audio Receive Packet Loss Max\"]}\n            </p>\n            <p>\n              Audio Receive Packet Loss Mean:{\" \"}\n              {data[\"Audio Receive Packet Loss Mean\"]}\n            </p>\n            <p>\n              Audio Send Bitrate Mean in kbps:\n              {data[\"Audio Send Bitrate Mean in kbps\"]}\n            </p>\n            <p>Audio Send Duration: {data[\"Audio Send Duration\"]}</p>\n            <p>Calendar Event Id: {data[\"Calendar Event Id\"]}</p>\n            <p>City: {data[\"City\"]}</p>\n            <p>Client Type: {data[\"Client Type\"]}</p>\n            <p>\n              <NavLink to={`/conference/${data[\"Conference ID\"]}`}>\n                {\" \"}\n                Conference ID: {data[\"Conference ID\"]}{\" \"}\n              </NavLink>\n            </p>\n            <p>Country: {data.Country}</p>\n            <p>Date: {data.Date}</p>\n            <p>Duration: {data.Duration}</p>\n            <p>Event Description:{data[\"Event Description\"]}</p>\n            <p>Event Name: {data[\"Event Name\"]}</p>\n            <p>IP Address: {data[\"IP Address\"]}</p>\n            <p>Meeting Code: {data[\"Meeting Code\"]}</p>\n            <p>Organizer Email: {data[\"Organizer Email\"]}</p>\n            <p>Participant Identifier: {data[\"Participant Identifier\"]}</p>\n          </div>\n        ) : null}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}