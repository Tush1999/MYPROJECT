{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar isArray_1 = __importDefault(require(\"lodash/isArray\"));\n\nvar isNil_1 = __importDefault(require(\"lodash/isNil\"));\n\nvar keys_1 = __importDefault(require(\"lodash/keys\"));\n/* eslint-enable @typescript-eslint/no-explicit-any */\n// Adapted from jQuery.param:\n// https://github.com/jquery/jquery/blob/2.2-stable/src/serialize.js\n\n\nfunction buildParams(prefix, obj, addFn) {\n  if (isArray_1.default(obj)) {\n    // Serialize array item.\n    for (var index = 0; index < obj.length; index++) {\n      var value = obj[index];\n\n      if (/\\[\\]$/.test(prefix)) {\n        // Treat each array item as a scalar.\n        addFn(prefix, value);\n      } else {\n        // Item is non-scalar (array or object), encode its numeric index.\n        buildParams(prefix + \"[\" + (typeof value === 'object' && value !== null ? index : '') + \"]\", value, addFn);\n      }\n    }\n  } else if (typeof obj === 'object') {\n    // Serialize object item.\n    for (var _i = 0, _a = keys_1.default(obj); _i < _a.length; _i++) {\n      var key = _a[_i];\n      var value = obj[key];\n      buildParams(prefix + \"[\" + key + \"]\", value, addFn);\n    }\n  } else {\n    // Serialize scalar item.\n    addFn(prefix, obj);\n  }\n}\n\nfunction objectToQueryParamString(obj) {\n  var parts = [];\n\n  var addFn = function (key, value) {\n    value = isNil_1.default(value) ? '' : value;\n    parts.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(value));\n  };\n\n  for (var _i = 0, _a = keys_1.default(obj); _i < _a.length; _i++) {\n    var key = _a[_i];\n    var value = obj[key];\n    buildParams(key, value, addFn);\n  }\n\n  return parts.join('&').replace(/%20/g, '+');\n}\n\nmodule.exports = objectToQueryParamString;","map":null,"metadata":{},"sourceType":"script"}